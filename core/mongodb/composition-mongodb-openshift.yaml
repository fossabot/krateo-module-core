apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: mongodb-ocp.core.modules.krateo.io
  labels:
    platform: openshift
spec:
  compositeTypeRef:
    apiVersion: core.modules.krateo.io/v1
    kind: mongodb
  resources:
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: ProviderConfig
        spec:
          credentials:
            source: InjectedIdentity
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-pc-in"
      readinessChecks:
        - type: None
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        metadata:
          annotations:
            crossplane.io/external-name: krateo-mongodb
        spec:
          forProvider:
            chart:
              name: mongodb
              repository: https://charts.bitnami.com/bitnami
              version: 12.1.21
            namespace: krateo-system
            values:
              auth:
                databases:
                - krateo
                usernames:
                - krateo
              volumePermissions:
                securityContext:
                  runAsUser: "auto"
              podSecurityContext:
                enabled: false
              containerSecurityContext:
                enabled: false
              shmVolume:
                chmod:
                  enabled: false
      patches:
        - fromFieldPath: spec.mongodb.version
          toFieldPath: spec.forProvider.chart.version
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-release-krateo-mongodb"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-helm-pc-in"
        - fromFieldPath: spec.namespace
          toFieldPath: spec.forProvider.namespace
